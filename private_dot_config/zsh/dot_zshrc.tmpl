{{- if .integration.zsh.enabled -}}
{{ $bogus := (. | setValueAtPath "custom.shell" "zsh") -}}

{{ template "xdg_env.tmpl" . }}
{{ template "brew_env.tmpl" . }}
{{ template "wsl_env.tmpl" . }}
(( $+commands[vim] )) && export EDITOR=vim || export EDITOR=nano

{{ template "code_env.tmpl" . }}

{{/* ---- */ -}}

zstyle :omz:plugins:ssh-agent agent-forwarding on
zstyle :omz:plugins:ssh-agent lazy yes
zstyle :omz:update mode disabled

{{ if .integration.zsh.omz -}}
{{ template "omz_env.tmpl" . }}
{{ else if .integration.zsh.antidote -}}
{{ template "antidote_env.tmpl" . }}
{{ end -}}

{{ if eq .chezmoi.os "linux" -}}
export GPG_TTY=$(tty)
{{ end -}}

export PATH="$HOME/.local/bin:$HOME/.local/wrapped:$PATH"
export LC_tmux_session=remote

{{ if .integration.kubernetes.enabled -}}
export KREW_ROOT=${XDG_CONFIG_HOME}/krew
export PATH="${KREW_ROOT}/bin:$PATH"
{{ end -}}

comp_path=$HOME/.local/share/zsh/completions
mkdir -p $comp_path
fpath=("$comp_path" $fpath)

typeset -A bins=(
    [bw]="completion --shell zsh"
    [docker]="completion zsh"
    [hishtory]="completion zsh"
    )

for compbin cmd in ${(kv)bins}; do
    if [ -f $HOME/.local/bin/$compbin ] ; then
        if [ -f $comp_path/_$compbin ]; then
            if [ $(find "$comp_path/_$compbin" -mtime -1 -print) ]; then
                continue
            else
                rm "$comp_path/_$compbin"
            fi
        fi
        $compbin ${(z)cmd} > "$comp_path/_$compbin"
    fi
done

(( $+commands[bat] )) && \
    export BAT_THEME="Nord" && \
    export MANPAGER="sh -c 'col -bx | bat -l man -p'" && \
    alias cat="bat --paging=never" && \
    alias rcat="command cat"

{{ if .integration.bitwarden.enabled -}}
{{ template "bw_session.tmpl" . }}
alias bwopen='export BW_SESSION=$(bw_session)'

{{ end -}}

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

if [ "$TERM_PROGRAM" != "Apple_Terminal" ]; then
    eval "$(oh-my-posh init zsh --config ~/.config/oh-my-posh.yaml)"
fi

{{ if lookPath "direnv" -}}
eval "$(direnv hook zsh)"

{{ end -}}

{{ if .integration.zsh.antidote -}}
antidote load
{{ end -}}
{{ if .integration.hishtory.enabled -}}
source ${XDG_CONFIG_HOME}/hishtory/config.zsh
{{ end }}
(( $+commands[bat] )) && \
    alias -g -- --help='--help 2>&1 | bat --language=help --style=plain' && \
    alias -g -- -h='-h 2>&1 | bat --language=help --style=plain'

{{ end -}}
